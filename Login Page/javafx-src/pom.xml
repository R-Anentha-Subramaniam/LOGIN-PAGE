<?xml version="1.0" encoding="UTF-8"?>
<!--
  MAVEN BUILD CONFIGURATION - Controls project dependencies and build process
  
  INSTRUCTIONS FOR NON-CODERS:
  - This file tells Maven how to build the JavaFX application
  - To change Java version: Modify <maven.compiler.source> and <maven.compiler.target>
  - To update JavaFX version: Change <javafx.version> property
  - To add new libraries: Add new <dependency> entries
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         https://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <!-- PROJECT IDENTIFICATION -->
    <groupId>com.college.booking</groupId>
    <artifactId>faculty-booking-system</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    
    <!-- PROJECT INFORMATION - CHANGEABLE -->
    <name>Faculty Booking System</name>
    <description>JavaFX application for faculty seminar hall booking</description>
    <url>https://github.com/yourorganization/faculty-booking-system</url>
    
    <!-- PROPERTIES - CHANGEABLE: Update versions as needed -->
    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- JAVAFX VERSION - Change this to update JavaFX -->
        <javafx.version>17.0.2</javafx.version>
        
        <!-- PLUGIN VERSIONS -->
        <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
        <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
        
        <!-- APPLICATION MAIN CLASS - CHANGEABLE -->
        <main.class>com.college.booking.FacultyBookingApplication</main.class>
    </properties>
    
    <!-- DEPENDENCIES - External libraries the application needs -->
    <dependencies>
        
        <!-- JAVAFX CORE DEPENDENCIES -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        
        <!-- DATABASE DEPENDENCIES -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.33</version>
        </dependency>
        
        <!-- OPTIONAL: PostgreSQL Support -->
        <!-- Uncomment if using PostgreSQL instead of MySQL
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.6.0</version>
        </dependency>
        -->
        
        <!-- OPTIONAL: SQLite Support -->
        <!-- Uncomment if using SQLite for development
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.42.0.0</version>
        </dependency>
        -->
        
        <!-- LOGGING DEPENDENCIES -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.20.0</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.20.0</version>
        </dependency>
        
        <!-- JSON PROCESSING (for configuration files) -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>
        
        <!-- TESTING DEPENDENCIES -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>
        
    </dependencies>
    
    <!-- BUILD CONFIGURATION -->
    <build>
        <plugins>
            
            <!-- JAVA COMPILER PLUGIN -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            
            <!-- JAVAFX PLUGIN - For running JavaFX applications -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.maven.plugin.version}</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>
            
            <!-- SUREFIRE PLUGIN - For running tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>
            
            <!-- SHADE PLUGIN - For creating executable JAR with dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main.class}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
    </build>
    
    <!-- REPOSITORIES - Where to download dependencies -->
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>
    
</project>

<!--
  BUILD AND RUN INSTRUCTIONS FOR NON-CODERS:
  
  1. INSTALL REQUIREMENTS:
     - Java 11 or higher
     - Maven 3.6 or higher
     - MySQL database (or change to PostgreSQL/SQLite)
  
  2. BUILD THE APPLICATION:
     mvn clean compile
  
  3. RUN THE APPLICATION:
     mvn javafx:run
  
  4. CREATE EXECUTABLE JAR:
     mvn clean package
     java -jar target/faculty-booking-system-1.0.0.jar
  
  5. RUN TESTS:
     mvn test
  
  6. CLEAN BUILD FILES:
     mvn clean
  
  7. IDE IMPORT:
     - IntelliJ IDEA: File > Open > Select pom.xml
     - Eclipse: File > Import > Existing Maven Projects
     - NetBeans: File > Open Project > Select project folder
  
  TROUBLESHOOTING:
  - If JavaFX modules not found: Check JVM arguments in your IDE
  - If database connection fails: Update DatabaseConnection.java with correct credentials
  - If build fails: Check Java and Maven versions match requirements
-->